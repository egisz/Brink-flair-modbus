### ESP32 used is a ESP32 Dev Kit V1
### https://mischianti.org/doit-esp32-dev-kit-v1-high-resolution-pinout-and-specs/
### The modbus TTL to RS485 interface used is a XY-017  (RS3485). No flow control needed and 3.3V powersupply

esp32:
  board: esp32dev
  framework:
    type: arduino

# uart for modbus rtu
uart:
  id: mod_bus
  baud_rate: 19200
  stop_bits: 1
  tx_pin: 16
  rx_pin: 17
  parity: even

# i2c for extra sensor
# i2c:
#   sda: 21
#   scl: 22
#   scan: true
#   id: bus_a

# Enable/Disable logging
logger:
  logs:
    modbus_controller.sensor: WARN
    modbus_controller.output: WARN
    modbus.number: WARN
    esp32.preferences: WARN
    sensor: WARN
    text_sensor: WARN
    dht.sensor: WARN
    switch: WARN
    button: WARN
    number: WARN
  # baud_rate: 0  # <--- super important! for ESP8266

wifi:
  ap:
    ssid: "${name} hotspot"
    password: "configesp"

captive_portal:

# Enable Web server.
web_server:
  port: 80
