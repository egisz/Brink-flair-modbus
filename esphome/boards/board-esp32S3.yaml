### ESP32S3 used is a LILYGO ESP32S3-T7  (tindie.com)
### The modbus TTL to RS485 interface used is a XY-017  (RS3485). No flow control needed and 3.3V powersupply

esp32:
  board: adafruit_feather_esp32s3_nopsram
  framework:
    type: arduino

#esphome:
#  platformio_options:
#    board_build.extra_flags:
#      - "-DARDUINO_USB_CDC_ON_BOOT=0"

# Modbus uart
uart:
  id: mod_bus
  baud_rate: 19200
  stop_bits: 1
  tx_pin: 16
  rx_pin: 12
  parity: even

# Option for 2x I2C connectors  ***experimental***
# Comment with # if not used.
i2c:  
  - id: bus_a
    sda: 13
    scl: 14
    scan: true

  - id: bus_b
    sda: 10
    scl: 18
    scan: true

## Option for DHT11 or DHT22 on last 3 terminals -/Signal/+ ***experimental***
## Comment with # if not used.
sensor:
#  - platform: dht
#    model: DHT11
#    pin: 8
#    temperature:
#      name: ${brink_temp_from_inside}
#      id: brink_temp_from_inside
#    humidity:
#      name: ${brink_humidity_from_inside}
#      id: brink_humidity_from_inside
#    update_interval: 15s

## Option for Relay  ***experimental***
## Comment with # if not used.
switch:
  ## Relay
  - platform: gpio
    pin:
      number: 5
      inverted: false
    name: ${brink_relay}"
    id: brink_relay
#    internal: true
    icon: mdi:alarm-bell

# Enable/Disable logging
logger:
  logs:
#    modbus_controller.sensor: WARN
#    modbus_controller.output: WARN
#    modbus.number: WARN
    esp32.preferences: WARN
    sensor: WARN
    text_sensor: WARN
    dht.sensor: WARN
    switch: WARN
    button: WARN
    number: WARN
  # baud_rate: 0  # <--- super important! for ESP8266

wifi:
  ap:
    ssid: "${${friendly_name}}"
    password: "configesp"

# enable IMPROV wifi, connection hotspot via bluetooth. see https://www.improv-wifi.com/
esp32_improv:
  authorizer: None 

captive_portal:

# Enable Web server.
web_server:
  port: 80

# Enable Status LED.
status_led:
  pin:
    number: 17