## 2x Brink CO2 sensors
sensor:
  - id: brink_external_co2_sensor1
    name: ${brink_external_co2_sensor1}
    platform: modbus_controller
    modbus_controller_id: ${name}
    icon: mdi:molecule-co2
    register_type: read
    address: 4201
    device_class: carbon_dioxide
    unit_of_measurement: "ppm"
    value_type: U_WORD  
    accuracy_decimals: 0
    state_class: measurement

  - id: brink_external_co2_sensor2
    name: ${brink_external_co2_sensor2}
    platform: modbus_controller
    modbus_controller_id: ${name}
    icon: mdi:molecule-co2
    register_type: read
    address: 4203
    device_class: carbon_dioxide
    unit_of_measurement: "ppm"
    value_type: U_WORD  
    accuracy_decimals: 0
    state_class: measurement

text_sensor:
  - id: brink_co2_status1
    name: ${brink_co2_status1}
    platform: modbus_controller
    modbus_controller_id: ${name}
    register_type: read
    address: 4200
    raw_encode: NONE
    icon: mdi:molecule-co2
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0:  mode_str = "Error"; break;
        case 1:  mode_str = "Not Initialized"; break;        
        case 2:  mode_str = "Idle"; break;
        case 3:  mode_str = "Warming Up"; break;
        case 4:  mode_str = "Running"; break;
        case 5:  mode_str = "Calibrating"; break;
        case 6:  mode_str = "Self Test"; break;
      }
      return mode_str;

  - id: brink_co2_status2
    name: ${brink_co2_status2}
    platform: modbus_controller
    modbus_controller_id: ${name}
    register_type: read
    address: 4202
    raw_encode: NONE
    icon: mdi:molecule-co2
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0:  mode_str = "Error"; break;
        case 1:  mode_str = "Not Initialized"; break;        
        case 2:  mode_str = "Idle"; break;
        case 3:  mode_str = "Warming Up"; break;
        case 4:  mode_str = "Running"; break;
        case 5:  mode_str = "Calibrating"; break;
        case 6:  mode_str = "Self Test"; break;
      }
      return mode_str;

switch:
  - id: brink_co2_sensor
    name: "${name} ${brink_co2_sensor}"
    platform: modbus_controller
    modbus_controller_id: ${name}
    register_type: holding
    address: 6150
    bitmask: 1
    entity_category: config
    icon: mdi:toggle-switch